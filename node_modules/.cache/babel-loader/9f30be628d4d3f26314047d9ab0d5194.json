{"ast":null,"code":"var _jsxFileName = \"/home/wes/Wes/study/react/projetoFinal/rick-morty/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styles from '../components/css/Character.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Character(_ref) {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [char, setChar] = useState([]);\n  const [planetOrigin, setPlanetOrigin] = useState([]);\n  const [episodeOne, setEpisodeOne] = useState([]);\n  const episodes = []; //character\n\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      console.log(data);\n      setChar(data);\n      setPlanetOrigin(data.origin.name); //Episodes\n\n      data.episode.length = 3;\n      episodes.push(data);\n    }).catch(err => console.log(err));\n  }, [id]); //\n\n  useEffect(() => {\n    for (let i = 0; i < episodes.length; i++) {\n      episodes.slice(0, 2);\n      fetch(episodes[i], {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        setEpisodeOne(data);\n      }).catch(err => console.log(err));\n    }\n  }, [id]);\n  console.log(episodeOne); //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.project_card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: char.image,\n        alt: `${char.name}_img`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: char.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Planeta de origem: \", planetOrigin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"episodes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), episodeOne.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Character, \"0NqoTjAb8clNsbtRAhgFP5ulDDM=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/home/wes/Wes/study/react/projetoFinal/rick-morty/src/components/Character.js"],"names":["useEffect","useState","styles","Character","id","char","setChar","planetOrigin","setPlanetOrigin","episodeOne","setEpisodeOne","episodes","fetch","method","headers","then","resp","json","data","console","log","origin","name","episode","length","push","catch","err","i","slice","project_card","image","status"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\n\nimport styles from '../components/css/Character.module.css'\n\nfunction Character({id}){\n\n    const [char, setChar] = useState([])\n    const [planetOrigin, setPlanetOrigin] = useState([])\n    const [episodeOne, setEpisodeOne] = useState([])\n    const episodes = [];\n\n    //character\n    useEffect(() => {\n                fetch(`https://rickandmortyapi.com/api/character/${id}` , {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                    .then((resp) => resp.json())\n                    .then((data) => {\n                        console.log(data)\n                        setChar(data)\n                        setPlanetOrigin(data.origin.name)\n                        //Episodes\n                        data.episode.length = 3\n                        episodes.push(data)\n                    })\n                    .catch((err) => console.log(err))\n    },[id])\n    //\n    useEffect(() => {\n    for (let i = 0; i < episodes.length; i++){\n        episodes.slice(0,2);\n\n        fetch(episodes[i] , {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((resp) => resp.json())\n            .then(data => {\n                setEpisodeOne(data)\n            })\n            .catch((err) => console.log(err))\n    }\n},[id])\n    console.log(episodeOne)\n    //\n    return (\n        <div className={styles.project_card}>\n        <div>\n            <p>Name: <span>{char.name}</span></p>\n            <img src={char.image} alt={`${char.name}_img`}/>\n        </div>\n        <p>Status: <span>{char.status}</span></p>\n        <p>Planeta de origem: {planetOrigin}</p>\n        <p>episodes:</p>\n        {episodeOne.name}\n        </div>\n    )\n}\nexport default Character"]},"metadata":{},"sourceType":"module"}