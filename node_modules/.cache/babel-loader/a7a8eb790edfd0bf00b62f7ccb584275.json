{"ast":null,"code":"var _jsxFileName = \"/home/wes/Wes/study/react/projetoFinal/rick-morty/src/components/Character.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport styles from '../components/css/Character.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Character(_ref) {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [char, setChar] = useState([]);\n  const [planetOrigin, setPlanetOrigin] = useState([]);\n  const [episodeOne, setEpisodeOne] = useState([]);\n  const episodes = []; //character\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(`https://rickandmortyapi.com/api/character/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n        setChar(data);\n        setPlanetOrigin(data.origin.name);\n        data.episode.length = 3;\n\n        for (let i = 0; i < data.episode.length; i++) {\n          episodes.push(data.episode[i]);\n          episodes.slice(0, 2);\n          fetch(episodes[i], {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(resp => resp.json()).then(data => {\n            console.log(data);\n            setEpisodeOne(data); //                                    \n          }).catch(err => console.log(err));\n        }\n      }).catch(err => console.log(err));\n    }, 1000);\n  }, []); //\n\n  const elementos = [{\n    tag: 'p',\n    texto: 'Frase 1'\n  }, {\n    tag: 'div',\n    texto: 'Frase 2'\n  }, {\n    tag: 'footer',\n    texto: 'Frase 3'\n  }, {\n    tag: 'section',\n    texto: 'Frase 4'\n  }];\n  const container = document.querySelector('.container');\n\n  for (let i = 0; i < elementos.length; i++) {\n    let {\n      tag: e,\n      texto: eTexto\n    } = elementos[i];\n    const elementCreate = document.createElement(e);\n    const elementTextCreate = document.createTextNode(eTexto);\n    elementCreate.appendChild(elementTextCreate);\n    container.appendChild(elementCreate); //console.log(`Índice ${i}`, e, eTexto);\n\n    console.log(elementos[i].tag);\n  } //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.project_card,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: char.image,\n        alt: `${char.name}_img`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: char.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Planeta de origem: \", planetOrigin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"episodes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Character, \"YlGnyLX7aqxv5ZC/tY9owoy2lUI=\");\n\n_c = Character;\nexport default Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/home/wes/Wes/study/react/projetoFinal/rick-morty/src/components/Character.js"],"names":["useEffect","useState","styles","Character","id","char","setChar","planetOrigin","setPlanetOrigin","episodeOne","setEpisodeOne","episodes","setTimeout","fetch","method","headers","then","resp","json","data","console","log","origin","name","episode","length","i","push","slice","catch","err","elementos","tag","texto","container","document","querySelector","e","eTexto","elementCreate","createElement","elementTextCreate","createTextNode","appendChild","project_card","image","status"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\n\nimport styles from '../components/css/Character.module.css'\n\nfunction Character({id}){\n\n    const [char, setChar] = useState([])\n    const [planetOrigin, setPlanetOrigin] = useState([])\n    const [episodeOne, setEpisodeOne] = useState([])\n    const episodes = [];\n\n    //character\n    useEffect(() => {\n        setTimeout(\n            () => {\n                fetch(`https://rickandmortyapi.com/api/character/${id}` , {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                    .then((resp) => resp.json())\n                    .then((data) => {\n                        console.log(data)\n                        setChar(data)\n                        setPlanetOrigin(data.origin.name)\n                        \n                        data.episode.length = 3\n                        for (let i = 0; i < data.episode.length; i++){\n                            episodes.push(data.episode[i])\n                            episodes.slice(0,2);\n\n                            fetch(episodes[i] , {\n                                method: 'GET',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                },\n                            })\n                                .then((resp) => resp.json())\n                                .then((data) => {\n                                    console.log(data)\n                                    setEpisodeOne(data)\n                                    \n                                //                                    \n                                })\n                                .catch((err) => console.log(err))\n                        }\n                    })\n                    .catch((err) => console.log(err))\n            }, 1000)\n    },[])\n\n    //\n    const elementos = [\n        {tag: 'p', texto: 'Frase 1'},\n        {tag: 'div', texto: 'Frase 2'},\n        {tag: 'footer', texto: 'Frase 3'},\n        {tag: 'section', texto: 'Frase 4'}\n    ];\n    \n    const container = document.querySelector('.container');\n    \n    for (let i = 0; i < elementos.length; i++){\n    \n        let {tag: e, texto: eTexto} = elementos[i];\n        \n        const elementCreate = document.createElement(e);\n        const elementTextCreate = document.createTextNode(eTexto);\n        elementCreate.appendChild(elementTextCreate);\n        \n        container.appendChild(elementCreate);\n    \n        //console.log(`Índice ${i}`, e, eTexto);\n    \n        console.log(elementos[i].tag);\n        \n    }\n\n    //\n\n    return (\n        <div className={styles.project_card}>\n        <div>\n            <p>Name: <span>{char.name}</span></p>\n            <img src={char.image} alt={`${char.name}_img`}/>\n        </div>\n        <p>Status: <span>{char.status}</span></p>\n        <p>Planeta de origem: {planetOrigin}</p>\n        <p>episodes:</p>\n\n        </div>\n    )\n}\nexport default Character"]},"metadata":{},"sourceType":"module"}